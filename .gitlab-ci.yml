include:
  - { project: retail/delivery-engineering/tool-gitlab-jobs, file: pipelines/microservice-v2.yml }

set-env-vars:
  stage: build
  image: 860638170744.dkr.ecr.af-south-1.amazonaws.com/ci/deploy-tools:latest
  script:
    - export K6_DB_TEST=$(ag-deploy encrypt -d OcE4Lnfy5Atg6SOhSNMvfJOmsKenLn+GhhkusyDBzYHrWwM3hFNOxZdJvujxTSZNDEa8H+W4jKCiCofOeHQnqfIm/R17ZR3PTzPvlbJglfe9TiShFWR5ZoC+fzkygVmYrPDCA/sVKqdTZzzgaLQaFmBX2XfoXczX3Lmr/PeFXCk=)
    - echo "K6_DB_TEST=$K6_DB_TEST" >> build.env
  artifacts:
    reports:
      dotenv: build.env

publish:
  when: manual

load-test-docstore-mongo-files:
  stage: test
  when: manual
  image: 
    name: docker-registry.gray.net/common/performance-k6
    entrypoint: ['']
  script:
    - echo "executing local k6 in k6 container..."
    - k6 run ./__load_performance__/load-test-docstore-file-download-mongo.js --summary-export=load-performance-docstore-mongo-files.json
  artifacts:
    reports:
      load_performance: load-performance-docstore-mongo-files.json

performance-test-docstore-mongo-files:
  stage: test
  when: manual
  image: 
    name: docker-registry.gray.net/common/performance-k6
    entrypoint: ['']
  script:
    - echo "executing local k6 in k6 container..."
    - k6 run ./__load_performance__/perf-test-docstore-file-download-mongo.js --summary-export=perf-performance-docstore-mongo-files.json
  artifacts:
    reports:
      load_performance: perf-performance-docstore-mongo-files.json

performance-test-docstore-siebel-files:
  stage: test
  when: manual
  image: 
    name: docker-registry.gray.net/common/performance-k6
    entrypoint: ['']
  script:
    - echo "executing local k6 in k6 container..."
    - k6 run ./__load_performance__/perf-test-docstore-file-download-siebel.js --summary-export=perf-performance-docstore-siebel-files.json
  artifacts:
    reports:
      load_performance: perf-performance-docstore-siebel-files.json

performance-test-docstore-aws-files:
  stage: test
  when: manual
  image: 
    name: docker-registry.gray.net/common/performance-k6
    entrypoint: ['']
  script:
    - echo "executing local k6 in k6 container..."
    - k6 run ./__load_performance__/perf-test-docstore-file-download-aws.js --summary-export=perf-performance-docstore-aws-files.json
  artifacts:
    reports:
      load_performance: perf-performance-docstore-aws-files.json

performance-test-docstore-metadata:
  stage: test
  when: manual
  image: 
    name: docker-registry.gray.net/common/performance-k6
    entrypoint: ['']
  script:
    - echo "executing local k6 in k6 container..."
    - k6 run ./__load_performance__/perf-test-docstore-query-metadata.js --summary-export=perf-performance-docstore-metadata.json
  artifacts:
    reports:
      load_performance: perf-performance-docstore-metadata.json

performance-test-docstore-uploads:
  stage: test
  when: manual
  image: 
    name: docker-registry.gray.net/common/performance-k6
  script:
    - echo "executing local k6 in k6 container..."
    - k6 run ./__load_performance__/perf-test-docstore-file-upload.js --summary-export=perf-test-docstore-file-upload.json
  artifacts:
    reports:
      load_performance: perf-test-docstore-file-upload.json

performance-test-public-site-downloads:
  stage: test
  when: manual
  image: 
    name: docker-registry.gray.net/common/performance-k6
  script:
    - echo "executing local k6 in k6 container..."
    - k6 run ./__load_performance__/perf-test-public-site-documents-download.js --summary-export=perf-test-public-site-documents-download.json
  artifacts:
    reports:
      load_performance: perf-test-public-site-documents-download.json

performance-test-uat-benchmark:
  stage: test
  when: manual
  image: 
    name: docker-registry.gray.net/common/performance-k6
    entrypoint: ['']
  script:
    - echo "executing local k6 in k6 container..."
    - k6 run --out json=test_results.json --tag run=uat-onprem-ci ./__load_performance__/perf-test-uat-benchmark.js
  after_script:
    - npm i
    - node results.js
  artifacts:
    paths:
      - test_results.json
      - results.txt

hygiene:
  image: docker-registry.agpl.cloud/common/node-testtools:18
  stage: build
  allow_failure: true
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      exists:
        - package.json
      when: always
  script:
    - npm --quiet --no-progress --depth=0 --color=always ci
    - npm run test:lint
    - npm outdated --colors || true
    - npm audit --registry=https://registry.npmjs.org --audit-level=moderate